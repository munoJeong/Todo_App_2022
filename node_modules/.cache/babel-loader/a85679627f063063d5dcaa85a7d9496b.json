{"ast":null,"code":"import _objectSpread from\"C:/todo_app_2022/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"C:/todo_app_2022/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useCallback,useRef,useState}from'react';import TodoInsert from'./components/TodoInsert';import TodoList from'./components/TodoList';import TodoTemplate from'./components/TodoTemplate';import'./App.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var _useState=useState([{id:1,text:'운동하기',checked:true},{id:2,text:'요리하기',checked:true},{id:3,text:'학원가기',checked:false}]),_useState2=_slicedToArray(_useState,2),todos=_useState2[0],setTodos=_useState2[1];var nextId=useRef(4);// ref dom요소를 선택할수있는 ID값\nvar onInsert=useCallback(function(value){var todo={id:nextId.current,text:value,checked:false};setTodos(todos.concat(todo));// (concat 배열과 배열 결합 )todo를 todos에 결합\nnextId.current+=1;},[todos]);var onRemove=useCallback(function(id){setTodos(todos.filter(function(todo){return todo.id!==id;}));//filter조건에 맞는 배열의 값\n},[todos]);var onToggle=useCallback(function(id){setTodos(todos.map(function(todo){return todo.id===id?_objectSpread(_objectSpread({},todo),{},{checked:!todo.checked}):todo;}));},[todos]);// 기존의 todo를 체크해서 체크된상태면 false로 바꾸고 false면 true\nreturn/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(TodoTemplate,{children:[/*#__PURE__*/_jsx(TodoInsert,{onInsert:onInsert}),/*#__PURE__*/_jsx(TodoList,{todos:todos,onRemove:onRemove,onToggle:onToggle})]})});}export default App;","map":{"version":3,"names":["React","useCallback","useRef","useState","TodoInsert","TodoList","TodoTemplate","App","id","text","checked","todos","setTodos","nextId","onInsert","value","todo","current","concat","onRemove","filter","onToggle","map"],"sources":["C:/todo_app_2022/src/App.js"],"sourcesContent":["import React, { useCallback, useRef, useState } from 'react';\nimport TodoInsert from './components/TodoInsert';\nimport TodoList from './components/TodoList';\nimport TodoTemplate from './components/TodoTemplate';\nimport './App.css'\n\n\nfunction App() {\n  const [todos, setTodos] = useState([\n    {\n      id: 1,\n      text: '운동하기',\n      checked: true,\n    },\n    {\n      id: 2,\n      text: '요리하기',\n      checked: true,\n    },\n    {\n      id: 3,\n      text: '학원가기',\n      checked: false,\n    }\n  ]);\n\n  const nextId = useRef(4); // ref dom요소를 선택할수있는 ID값\n\n  const onInsert = useCallback(value =>{\n    const todo ={\n      id: nextId.current,\n      text: value,\n      checked: false,\n    };\n    setTodos(todos.concat(todo)); // (concat 배열과 배열 결합 )todo를 todos에 결합\n    nextId.current += 1;\n\n  },[todos]);\n\n  const onRemove = useCallback(id =>{\n    setTodos(todos.filter(todo => todo.id !== id)); //filter조건에 맞는 배열의 값\n  },[todos]);\n\n  const onToggle = useCallback(id =>{\n    setTodos(todos.map(todo => todo.id === id ? {...todo, checked: !todo.checked} : todo));\n  },[todos]);\n  // 기존의 todo를 체크해서 체크된상태면 false로 바꾸고 false면 true\n  \n  return (\n    <div >\n      <TodoTemplate>\n        <TodoInsert onInsert={onInsert}/>\n        <TodoList todos={todos} onRemove={onRemove} onToggle={onToggle}/> \n        {/*props 형태로 TodoList로 보낸뒤 리스트에서 구조분해후 리스트아이템로 다시 보낸후 적용*/}\n      </TodoTemplate>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"2MAAA,MAAOA,MAAK,EAAIC,WAAW,CAAEC,MAAM,CAAEC,QAAQ,KAAQ,OAAO,CAC5D,MAAOC,WAAU,KAAM,yBAAyB,CAChD,MAAOC,SAAQ,KAAM,uBAAuB,CAC5C,MAAOC,aAAY,KAAM,2BAA2B,CACpD,MAAO,WAAW,yFAGlB,QAASC,IAAG,EAAG,CACb,cAA0BJ,QAAQ,CAAC,CACjC,CACEK,EAAE,CAAE,CAAC,CACLC,IAAI,CAAE,MAAM,CACZC,OAAO,CAAE,IACX,CAAC,CACD,CACEF,EAAE,CAAE,CAAC,CACLC,IAAI,CAAE,MAAM,CACZC,OAAO,CAAE,IACX,CAAC,CACD,CACEF,EAAE,CAAE,CAAC,CACLC,IAAI,CAAE,MAAM,CACZC,OAAO,CAAE,KACX,CAAC,CACF,CAAC,wCAhBKC,KAAK,eAAEC,QAAQ,eAkBtB,GAAMC,OAAM,CAAGX,MAAM,CAAC,CAAC,CAAC,CAAE;AAE1B,GAAMY,SAAQ,CAAGb,WAAW,CAAC,SAAAc,KAAK,CAAG,CACnC,GAAMC,KAAI,CAAE,CACVR,EAAE,CAAEK,MAAM,CAACI,OAAO,CAClBR,IAAI,CAAEM,KAAK,CACXL,OAAO,CAAE,KACX,CAAC,CACDE,QAAQ,CAACD,KAAK,CAACO,MAAM,CAACF,IAAI,CAAC,CAAC,CAAE;AAC9BH,MAAM,CAACI,OAAO,EAAI,CAAC,CAErB,CAAC,CAAC,CAACN,KAAK,CAAC,CAAC,CAEV,GAAMQ,SAAQ,CAAGlB,WAAW,CAAC,SAAAO,EAAE,CAAG,CAChCI,QAAQ,CAACD,KAAK,CAACS,MAAM,CAAC,SAAAJ,IAAI,QAAIA,KAAI,CAACR,EAAE,GAAKA,EAAE,GAAC,CAAC,CAAE;AAClD,CAAC,CAAC,CAACG,KAAK,CAAC,CAAC,CAEV,GAAMU,SAAQ,CAAGpB,WAAW,CAAC,SAAAO,EAAE,CAAG,CAChCI,QAAQ,CAACD,KAAK,CAACW,GAAG,CAAC,SAAAN,IAAI,QAAIA,KAAI,CAACR,EAAE,GAAKA,EAAE,gCAAOQ,IAAI,MAAEN,OAAO,CAAE,CAACM,IAAI,CAACN,OAAO,GAAIM,IAAI,GAAC,CAAC,CACxF,CAAC,CAAC,CAACL,KAAK,CAAC,CAAC,CACV;AAEA,mBACE,kCACE,MAAC,YAAY,yBACX,KAAC,UAAU,EAAC,QAAQ,CAAEG,QAAS,EAAE,cACjC,KAAC,QAAQ,EAAC,KAAK,CAAEH,KAAM,CAAC,QAAQ,CAAEQ,QAAS,CAAC,QAAQ,CAAEE,QAAS,EAAE,GAEpD,EACX,CAEV,CAEA,cAAed,IAAG"},"metadata":{},"sourceType":"module"}